def solution(num):
    i = 0
    def recurse(n, i):
        if i >= 500:
            return -1
        if n == 1:
            return i
        if n % 2 == 0:
            n //= 2
        else:
            n = (n * 3) + 1
        return recurse(n, i+1)
        
    return recurse(num, i)

"""
정확성  테스트
테스트 1 〉	통과 (0.05ms, 10.2MB)
테스트 2 〉	통과 (0.10ms, 10.4MB)
테스트 3 〉	통과 (0.13ms, 10.3MB)
테스트 4 〉	통과 (0.02ms, 10.2MB)
테스트 5 〉	통과 (0.35ms, 10.5MB)
테스트 6 〉	통과 (0.05ms, 10.2MB)
테스트 7 〉	통과 (0.48ms, 10.5MB)
테스트 8 〉	통과 (0.06ms, 10.3MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.32ms, 10.5MB)
테스트 11 〉	통과 (0.35ms, 10.5MB)
테스트 12 〉	통과 (0.03ms, 10.2MB)
테스트 13 〉	통과 (0.00ms, 10.2MB)
테스트 14 〉	통과 (0.06ms, 10.2MB)
테스트 15 〉	통과 (0.05ms, 10.3MB)
테스트 16 〉	통과 (0.04ms, 10.2MB)
"""

# while문으로 풀었을 때 시간이 더 빠르긴한듯..
def solution(num):
    i=0
    while(num != 1.0) :
        if i >=500 : 
            return -1
            break
        if num%2==0 :
            num = num//2
            i += 1
        elif num%2==1 :
            num = 3*num + 1
            i += 1
            
    return i

"""
정확성  테스트
테스트 1 〉	통과 (0.04ms, 10.2MB)
테스트 2 〉	통과 (0.05ms, 10.2MB)
테스트 3 〉	통과 (0.05ms, 10.2MB)
테스트 4 〉	통과 (0.02ms, 10.3MB)
테스트 5 〉	통과 (0.13ms, 10.2MB)
테스트 6 〉	통과 (0.02ms, 10.2MB)
테스트 7 〉	통과 (0.14ms, 10.1MB)
테스트 8 〉	통과 (0.03ms, 10.2MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.13ms, 10.1MB)
테스트 11 〉	통과 (0.12ms, 10.2MB)
테스트 12 〉	통과 (0.02ms, 10.2MB)
테스트 13 〉	통과 (0.00ms, 10.1MB)
테스트 14 〉	통과 (0.03ms, 10.2MB)
테스트 15 〉	통과 (0.03ms, 10.1MB)
테스트 16 〉	통과 (0.03ms, 10.2MB)
"""